/*
 * sha384.h
 *
 *  Created on: May 23, 2023
 *      Author: ilbounce
 */

#ifndef SHA384_H_
#define SHA384_H_

#ifdef WIN32
#pragma once
#endif

#include <stdint.h>
#include <stdio.h>

typedef struct {
    uint64_t state[8];
    uint8_t buf[128];
    uint64_t total[2];
} Sha384Context;

#define SHA384_HASH_SIZE 48

typedef struct {
    uint8_t bytes[SHA384_HASH_SIZE];
} SHA384_HASH;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  PUBLIC FUNCTIONS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  Sha384Initialise
//
//  Initialises a SHA384 Context. Use this to initialise/reset a context.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void Sha384Initialise(Sha384Context* Context  // [out]
);

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  Sha384Update
//
//  Adds data to the SHA384 context. This will process the data and update the
//  internal state of the context. Keep on calling this function until all the
//  data has been added. Then call Sha384Finalise to calculate the hash.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void Sha384Update(Sha384Context* Context,  // [in out]
    void const* Buffer,      // [in]
    uint32_t BufferSize      // [in]
);

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  Sha384Finalise
//
//  Performs the final calculation of the hash and returns the digest (32 byte
//  buffer containing 384bit hash). After calling this, Sha384Initialised must
//  be used to reuse the context.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void Sha384Finalise(Sha384Context* Context,  // [in out]
    SHA384_HASH* Digest      // [out]
);

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  Sha256Calculate
//
//  Combines Sha384Initialise, Sha384Update, and Sha384Finalise into one
//  function. Calculates the SHA384 hash of the buffer.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void Sha384Calculate(void const* Buffer,   // [in]
    uint32_t BufferSize,  // [in]
    SHA384_HASH* Digest   // [in]
);

#endif /* SHA384_H_ */
